cmake_minimum_required(VERSION 3.1)
set(CppFiles register.cpp conditionalPoissonInclusion.cpp)
set(HeaderFiles conditionalPoissonInclusion.h)
add_library(samplingRPackage SHARED ${CppFiles} ${HeaderFiles})
target_link_libraries(samplingRPackage PUBLIC sampling Rcpp)
set_target_properties(samplingRPackage PROPERTIES OUTPUT_NAME "sampling")
if(WIN32)
	target_compile_definitions(samplingRPackage PUBLIC _CRT_SECURE_NO_WARNINGS)
	target_link_libraries(samplingRPackage PRIVATE "${CMAKE_BINARY_DIR}/RPackage/R.lib")
	foreach(BUILD_TYPE IN LISTS CMAKE_CONFIGURATION_TYPES)
		string(TOUPPER "${BUILD_TYPE}" UPPER_BUILD_TYPE)
		if(CMAKE_SIZEOF_VOID_P EQUAL 8)
			set_target_properties(samplingRPackage PROPERTIES RUNTIME_OUTPUT_DIRECTORY_${UPPER_BUILD_TYPE} ${CMAKE_BINARY_DIR}/RPackage/${BUILD_TYPE}/inst/libs/x64 PDB_OUTPUT_DIRECTORY_${UPPER_BUILD_TYPE} ${CMAKE_BINARY_DIR}/RPackage/${BUILD_TYPE}/inst/libs/x64)
		else()
			set_target_properties(samplingRPackage PROPERTIES RUNTIME_OUTPUT_DIRECTORY_${UPPER_BUILD_TYPE} ${CMAKE_BINARY_DIR}/RPackage/${BUILD_TYPE}/inst/libs/i386 PDB_OUTPUT_DIRECTORY_${UPPER_BUILD_TYPE} ${CMAKE_BINARY_DIR}/RPackage/${BUILD_TYPE}/inst/libs/i386)
		endif()
	endforeach()
else()
	set_target_properties(samplingRPackage PROPERTIES LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/RPackage/src)
	set_target_properties(samplingRPackage PROPERTIES PREFIX "")
endif()

