cmake_minimum_required(VERSION 3.1)
project(sampling)
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake")
set(Boost_USE_STATIC_LIBS	OFF)
set(Boost_USE_MULTITHREADED	ON)
set(Boost_USE_STATIC_RUNTIME	OFF)
option(BUILD_R_PACKAGE "Build R package" OFF)

find_package(Boost 1.53.0 COMPONENTS random unit_test_framework REQUIRED)
if(CMAKE_COMPILER_IS_GNUCC)
	add_definitions("-Wall")
endif()
if(WIN32)
	find_package(mpir REQUIRED)
	find_package(mpfr REQUIRED)
else()
	#mpfr needs to be listed as an imported target so that we can use target_link_librarie later on. If we don't have this then it just adds a -lmpfr which probably picks up the wrong thing. 
	find_library(mpfr_LIBRARY mpfr)
	add_library(mpfr SHARED IMPORTED)
	set_target_properties(mpfr PROPERTIES IMPORTED_LOCATION ${mpfr_LIBRARY})
endif()
add_subdirectory(sampling)
add_subdirectory(samplingTests)
add_subdirectory(copyText)
add_subdirectory(copyBinary)
if(BUILD_R_PACKAGE)
	find_package(R REQUIRED)
	add_subdirectory(RPackage)
	if(WIN32)
		install(CODE "execute_process(COMMAND \"${R_COMMAND}\" CMD INSTALL --no-multiarch RPackage/\$\{CMAKE_INSTALL_CONFIG_NAME\} WORKING_DIRECTORY ${CMAKE_BINARY_DIR})")
	else()
		install(CODE "execute_process(COMMAND \"${R_COMMAND}\" CMD INSTALL RPackage/ WORKING_DIRECTORY ${CMAKE_BINARY_DIR})")
	endif()
endif()
export(TARGETS sampling FILE samplingConfig.cmake)
