cmake_minimum_required(VERSION 3.1)
set(CppFiles sampfordBruteForce.cpp conditionalPoisson.cpp sampfordConditionalPoissonRejective.cpp semiDeterministicSampling.cpp sampfordFromParetoNaive.cpp pareto.cpp)
set(HeaderFiles sampford.h conditionalPoisson.h semiDeterministicSampling.h pareto.h includeMPFRSampling.h)

add_library(sampling STATIC ${CppFiles} ${HeaderFiles})
target_include_directories(sampling PUBLIC ${Boost_INCLUDE_DIRS} ${PROJECT_SOURCE_DIR}/sampling)
target_link_libraries(sampling PUBLIC ${Boost_LIBRARIES} mpfr)

target_compile_definitions(sampling PUBLIC BOOST_ALL_NO_LIB BOOST_ALL_DYN_LINK)
if(WIN32)
	set_target_properties(sampling PROPERTIES ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR} PDB_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})
	target_link_libraries(sampling PUBLIC mpir)
else()
	if(NOT(CMAKE_CXX_COMPILER_ID MATCHES "Intel"))
		target_compile_features(sampling PUBLIC cxx_rvalue_references)
		target_compile_options(sampling PUBLIC "-fPIC")
	else()
		target_compile_options(sampling PUBLIC "-std=c++11" "-fPIC")
	endif()
endif()
export(TARGETS sampling FILE samplingConfig.cmake)
